{"name":"Webdevutils","tagline":"A set of utilities for web development on *NIX systems (Linux, BSD, OSX)","body":"# webdevutils                                                                      \r\n                                                                                   \r\nThis will contain a set of simple web development utilities that are portable      \r\nand packaged across all \\*NIX based OSes for the purpose of making web             \r\ndevelopment less annoying. Not forcing backend developers to install NodeJS        \r\njust because their frontend developers use it. And, of course, not forcing         \r\nfrontend developers to download the whole effing internet with Maven just          \r\nbecause the backend developers build with Java or whatever.                        \r\n                                                                                   \r\n## Purpose                                                                         \r\n                                                                                   \r\nThe goal is to build _really_ simple command line tools that:                      \r\n* allow the two parts of development to evolve separately;                         \r\n* not forcing both toolsets to be installed in both frontend and backend           \r\ndevelopment environments, creating a Frankenstein environment to maintain.         \r\n* provide packages for these command line tools for the main \\*NIX OSes used       \r\nfor development including: Linux (deb and RPM support), OSX (Homebrew),            \r\nFreeBSD (ports).                                                                   \r\n                                                                                   \r\nIf you have additional suggestions for packages to provide, submit an              \r\n[issue](https://github.com/mbbx6spp/webdevutils/issues).                           \r\n                                                                                   \r\n## Contents                                                                        \r\n                                                                                   \r\nAt the moment I only have two command line tools in mind:                          \r\n* `staticserve` - a command line tool that can statically serve the                \r\ncontents of a local directory on a specific port. Hey, I did say                   \r\n_really_ simple earlier and I meant it.                                            \r\n* `autocompile` - a command line tool that can listen for filesystem               \r\nevents and autocompile source files in the directory tree it is                    \r\nlistening on to a destination using whatever command you want.                     \r\n                                                                                   \r\nThe use case for `staticserve` are:                                                \r\n* Allowing backend developers to serve compile assets already built and            \r\ngenerated by front end devs to drive their API endpoints.                          \r\n* Allowing frontend developers to serve static JSON/XML canned responses           \r\nto fake a REST API for their frontend app until it is ready.                       \r\n                                                                                   \r\nThere will be more to come, I promise.                                             \r\n\r\n## Usage                                                                          \r\n                                                                                  \r\nSay you want to serve static assets or canned API responses from PWD              \r\nlocally. You could run the following command:                                     \r\n                                                                                  \r\n```                                                                               \r\nstaticserve                                                                       \r\n```                                                                               \r\n                                                                                  \r\nIf you wanted to serve a different directory:                                     \r\n                                                                                  \r\n```                                                                               \r\nstaticserve -serve /path/to/serve                                                 \r\n```                                                                               \r\n                                                                                  \r\nIf you wanted to serve from a different port to the default (which is 8000):      \r\n                                                                                  \r\n```                                                                               \r\nstaticserve -serve /path/to/serve -listen :9876                                   \r\n```                                                                               \r\n                                                                                  \r\nIf you wanted to serve assets or canned API responses over TLS:                   \r\n                                                                                  \r\n```                                                                               \r\nstaticserve -serve /path/to/serve -listen :9876 -tls -key /path/to/key \\          \r\n  -cert /path/to/cert                                                             \r\n```                                                                               \r\n                                                                                  \r\nAt the moment that is about it.                                                   \r\n                                                                                  \r\n                                                                                  \r\n## License                                                                        \r\n                                                                                  \r\nReleased under the BSD 3-clause license:                                          \r\nhttp://opensource.org/licenses/BSD-3-Clause                                       \r\n                                                                                  \r\nSee LICENSE file for more information.                                            \r\n                                                                                  \r\n## Developers                                                                     \r\n                                                                                  \r\nSo far just me, but feel free to submit pull requests and add your name to        \r\nthis file:                                                                        \r\n                                                                                  \r\n* [Susan Potter](https://github.com/mbbx6spp)                                     ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}